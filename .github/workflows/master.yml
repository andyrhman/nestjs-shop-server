name: CI/CD Pipeline

on:
  pull_request_target:
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker images and push to Docker Hub
        run: |
          docker build -t tataran/shop-server .
          docker build -t tataran/shop-nginx ./nginx
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
          docker push tataran/shop-server
          docker push tataran/shop-nginx
        env:
          DOCKER_ID: ${{ secrets.DOCKER_ID }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  migrate:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run migrations
        run: |
          npm install
          npm run migration:generate --name=MIGRATE_TABLES
          npm run migration:run
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Create env file'
      run: |
        echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
        echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
        echo POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }} >> .env
        echo CHECKOUT_URL=${{ secrets.CHECKOUT_URL }} >> .env
        echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
        echo SMTP_HOST=${{ secrets.SMTP_HOST }} >> .env
        echo SMTP_PORT=${{ secrets.SMTP_PORT }} >> .env
        echo SMTP_SECURE=${{ secrets.SMTP_SECURE }} >> .env
        echo SMTP_USERNAME=${{ secrets.SMTP_USERNAME }} >> .env
        echo SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} >> .env
        echo GOOGLE_CLIENT=${{ secrets.GOOGLE_CLIENT }} >> .env
        echo FACEBOOK_APP_ID=${{ secrets.FACEBOOK_APP_ID }} >> .env
        echo FACEBOOK_CLIENT_SECRET=${{ secrets.FACEBOOK_CLIENT_SECRET }} >> .env
        echo STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }} >> .env
        echo ORIGIN_1=${{ secrets.ORIGIN_1 }} >> .env
        echo ORIGIN_2=${{ secrets.ORIGIN_2 }} >> .env

    - name: Generate deployment package
      run: zip -r ${{ github.run_id }}.zip . -x '*.git*'

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: shopyfy-server
        environment_name: Shopyfy-server-env
        region: ap-southeast-1
        version_label: ${{github.run_number}}
        deployment_package: ${{ github.run_id }}.zip